<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!--
2011-08-19 0.1-1bw - first release

This Plugin installs and controls Transmission for UnRaid.
All dependencies are installed as needed and everything is controlable from the webgui
-->

<FILE Name="/boot/packages/curl-7.21.4-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/n/curl-7.21.4-i486-1.txz</URL>
<MD5>e32449e0588ef54df8524827028972e8</MD5>
</FILE>

<FILE Name="/boot/packages/glibc-2.13-i486-4.txz" Run="upgradepkg --install-new">
<URL>http://slackware.mirrors.tds.net/pub/slackware/slackware-13.37/slackware/l/glibc-2.13-i486-4.txz</URL>
<MD5>1412526a753357b9008ae650a42954d6</MD5>
</FILE>

<FILE Name="/boot/packages/libevent-2.0.11-i486-1sl.txz" Run="upgradepkg --install-new">
<URL>http://repository.slacky.eu/slackware-13.37/libraries/libevent/2.0.11/libevent-2.0.11-i486-1sl.txz</URL>
<MD5>983db1f4445d017ba6bd3731dc63d499</MD5>
</FILE>

<FILE Name="/boot/packages/libidn-1.19-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/l/libidn-1.19-i486-1.txz</URL>
<MD5>d412b0bd8f1f0731ec3e39702bf3a78c</MD5>
</FILE>

<FILE Name="/boot/packages/openldap-client-2.4.21-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.oregonstate.edu//slackware-13.1/slackware/n/openldap-client-2.4.21-i486-1.txz</URL>
<MD5>330d34e3b0d896cd1033fe3eddb3b259</MD5>
</FILE>

<FILE Name="/boot/packages/transmission_unraid-2.33-i486-10kh.txz" Run="upgradepkg --install-new">
<URL>http://unraid-greenleaf-repository.googlecode.com/files/transmission_unraid-2.33-i486-11kh.txz</URL>
<MD5>641ff060b4c9d299de5a60aeae52334f</MD5>
</FILE>

<FILE Name="/boot/config/plugins/transmission/transmission.png">
<URL>http://unraid.benjaminwaller.de/transmission/transmission.png</URL>
</FILE>

<!-- clean up previous install -->
<FILE Name="/tmp/transmission-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
rm -f /etc/rc.d/rc.transmission
rm -f -R /usr/local/emhttp/plugins/transmission

rm /tmp/transmission-cleanup
]]>
</INLINE>
</FILE>


<FILE Name="/boot/config/plugins/transmission/transmission.cfg">
<INLINE>
<![CDATA[
# transmission configuration
SERVICE="disable"
DATADIR="/usr/local/transmission"
RUNAS="nobody"
PORT="9091"
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.transmission" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# Start/stop/restart/enable/disable transmissiontransmission.

transmission_start() {
  # no-op if not enabled
  if [ $SERVICE != "enable" ]; then
    return
  fi
  # no-op if already running
  if [ -r /var/run/transmission/transmission.pid ]; then
    return
  fi
  

  CMDLINE="sudo -u $RUNAS transmission-daemon --port $PORT --config-dir $DATADIR --pidfile /var/run/transmission/transmission.pid > /dev/null 2>&1"
  echo -n "Starting transmission:  $CMDLINE"
  $CMDLINE
  echo
  
  while [ ! -e /var/run/transmission/transmission.pid ]; do
	sleep 1
  done
  
}

transmission_stop() {
  # no-op if not running
  if [ ! -r /var/run/transmission/transmission.pid ]; then
    return
  fi

  echo -n "Stopping transmission..."
  sleep 0.5
  echo

  kill $(cat /var/run/transmission/transmission.pid)
  
  while [ -e /var/run/transmission/transmission.pid ]; do
	sleep 1
  done
  
  echo
}

transmission_restart() {
  transmission_stop
  sleep 1
  transmission_start
}

write_config() {
  echo "# transmission configuration" > /boot/config/plugins/transmission/transmission.cfg
  echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/transmission/transmission.cfg
  echo "DATADIR=\"$DATADIR\"" >> /boot/config/plugins/transmission/transmission.cfg
  echo "RUNAS=\"$RUNAS\"" >> /boot/config/plugins/transmission/transmission.cfg
  echo "PORT=\"$PORT\"" >> /boot/config/plugins/transmission/transmission.cfg
}

transmission_enable() {
  # if not already enabled, enable it
  if [ "$SERVICE" != "enable" ]; then
    SERVICE=enable
  
	DATADIR="$3"
	
	if [ $RUNAS != $1]; then
		chown -R $1:users "$DATADIR"
	fi
	
	RUNAS="$1"
	PORT="$2"
	
	# create transmission user if necessary
	if [[ $RUNAS != "nobody" && $RUNAS != "root" ]]; then
		if ( ! grep -q ^$RUNAS /etc/passwd ); then
	  		useradd -r -g users -d / -s /bin/false $RUNAS &> /dev/null
	  		cp /etc/passwd /etc/shadow /boot/config
		fi
	fi
	
    #change port, so the config will have the correct port too (won't work at first run)
	#if [ -e "$DATADIR/config.ini" ]; then
	#	mv "$DATADIR/config.ini" "$DATADIR/config.old"
	#	sed 's/^web_port = [0-9]*/web_port = '$PORT'/' "$DATADIR/config.old" > "$DATADIR/config.ini"
	#	chown $RUNAS:users "$DATADIR/config.ini"
	#	rm "$DATADIR/config.old"
	#fi
	
    write_config
  fi

  # enabling also starts it
  transmission_start
}

transmission_disable() {
  transmission_stop
  SERVICE=disable
  write_config
}

# read our configuration
source /boot/config/plugins/transmission/transmission.cfg

case "$1" in
'start')
  transmission_start
  ;;
'stop')
  transmission_stop
  ;;
'restart')
  transmission_restart
  ;;
'enable')
  transmission_enable $2 $3 $4
  ;;
'disable')
  transmission_disable
  ;;
*)
  echo "usage $0 start|stop|restart|enable|disable"
esac

]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/transmission/transmission.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="transmission.png"
Version="2.33-1bw"
Author="Benjamin Waller"
Type="php"
Title="Transmission"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/transmission/transmission.png">
<LOCAL>/boot/config/plugins/transmission/transmission.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/transmission/transmission.php">
<INLINE>
<![CDATA[
<?PHP
$transmission_cfg = parse_ini_file( "/boot/config/plugins/transmission/transmission.cfg");
$transmission_running = file_exists( "/var/run/transmission/transmission.pid") ? "yes" : "no";
//get transmission config
if (file_exists($transmission_cfg["DATADIR"]."/config.ini"))
{
	$ff = file_GET_contents($transmission_cfg["DATADIR"]."/settings.json");
	$data = explode("\n",$ff);
	foreach ($data as $d) {
		if ( substr($d,0,1) != "#") {
			ereg("([^=]*)=([^$]*)", $d, $regs);
			$transconfig[trim($regs[1])] = trim(str_replace("\"", "", $regs[2]));
		}
	}
	$trans_port = $sickconfig["rpc_port"];
} else {
	$trans_port = "9091";
}

?>
   <form name="transmission_settings" method="POST" action="/update.htm" target="progressFrame">
      <input type="hidden" name="cmd" value="/etc/rc.d/rc.transmission">
      <table class="settings">
         <tr>
         <td>Enable transmission:</td>
         <td><select name="arg1" size="1"  onChange="checkINSTALLDIR(this.form);">
            <?=mk_option($transmission_cfg['SERVICE'], "disable", "No");?>
            <?=mk_option($transmission_cfg['SERVICE'], "enable", "Yes");?>
            </select></td>
         </tr>
		 <tr>
         <td>Data directory:</td>
         <td><input type="text" name="arg4" maxlength="60" value="<?=$transmission_cfg['DATADIR'];?>"></td>
         </tr>
		 <tr>
         <td>Port:</td>
         <td><input type="text" name="arg3" maxlength="40" value="<?=$transmission_cfg['PORT'];?>"></td>
         </tr>
		 <tr>
         <td>Run as user:</td>
         <td><select name="runas" size="1"  onChange="checkUSER(this.form);">
            <?=mk_option($transmission_cfg['RUNAS'], "nobody", "nobody");?>
            <?=mk_option($transmission_cfg['RUNAS'], "root", "root");?>
			<option value='other'<?=($transmission_cfg['RUNAS'] != "root" && $transmission_cfg['RUNAS'] != "nobody")?" selected=yes":"" ;?>>other</option>
            </select><input type="text" name="arg2" maxlength="40" value="<?=$transmission_cfg['RUNAS'];?>"></td>
         </tr>
         <tr>
         <td></td>
         <td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button></td>
         </tr>
      </table>
   </form>
<? if ($transmission_running=="yes"): ?>
     <hr>
     <p class=ContentTitle><a href="http://<?=$var['NAME'];?>:<?=$transmission_cfg['PORT'];?>" target="_blank">Transmission</a> is running</p>
<? endif; ?>

<script type="text/javascript">
function checkINSTALLDIR(form)
{
   if ("<?=$transmission_running;?>" == "yes") {
	      form.arg2.readOnly = true;
	      form.arg3.readOnly = true;
		  form.arg4.readOnly = true;
		  form.runas.disabled = true;
	   }
	   else {
	      form.arg2.readOnly = (form.arg1.value == "enable");
	      form.arg3.readOnly = (form.arg1.value == "enable");
	      form.arg4.readOnly = (form.arg1.value == "enable");
	      form.runas.disabled = (form.arg1.value == "enable");
	   }
}

function checkUSER(form)
{
	if (form.runas.selectedIndex < 2 ) {
		form.arg2.value = form.runas.options[form.runas.selectedIndex].value;
		form.arg2.type = "hidden";
	} else {
		form.arg2.value = "<?=$transmission_cfg['RUNAS'];?>";
		form.arg2.type = "text";
	}
}

checkINSTALLDIR(document.transmission_settings);
checkUSER(document.transmission_settings);
</script>

]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/transmission/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.transmission start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/transmission/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.transmission stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/transmission-install" Run="/bin/bash">
<INLINE>
<![CDATA[
# include our config vars
source /boot/config/plugins/transmission/transmission.cfg

# create transmission-writable directory for pid file
if [ ! -e /var/run/transmission ]; then
  mkdir /var/run/transmission
  chown $RUNAS:users /var/run/transmission
  chmod 0777 /var/run/transmission
fi

rm /tmp/transmission-install
]]>
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/transmission">
<INLINE>
<![CDATA[

]]>
</INLINE>
</FILE>

</PLUGIN>